package org.tesis.wizard.create;

import org.tesis.dbapi.FileChooser;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.tesis.dbapi.ConfigValues;
import org.tesis.dbapi.Constants;
import org.tesis.dbapi.Message;
import org.tesis.dbapi.MyLogger;
import org.tesis.util.Utils;
import org.tesis.dbapi.Util;
import org.tesis.jaxb.JAXBGenerator;
import org.tesis.jaxb.JXChangeLog;

public final class WizardCreateVisualPanel1 extends JPanel implements DocumentListener, ActionListener {
    public WizardCreateVisualPanel1() {
        initComponents();
        this.textFieldNombreDb.getDocument().addDocumentListener(this); 
        this.textFieldAuthor.getDocument().addDocumentListener(this);
        this.textFieldProject.getDocument().addDocumentListener(this);
        this.textFieldPath.getDocument().addDocumentListener(this);
        this.textFieldNombreChangeLog.getDocument().addDocumentListener(this);
        this.radioButtonChangeLogNuevo.addActionListener(this);
        this.radioButtonChangeLogExistente.addActionListener(this);
    }
    private boolean validChangeLogValues=false;//dependiendo de que radiobutton se seleccione, valida que los campos est√©n correctos.
    private ConfigValues configValues=null;
    @Override
    public String getName() {
        return "Paso #1";
    }

    public ConfigValues getConfigValues() {
        return configValues;
    }

    public JTextField getTextFieldNombreDb() {
        return textFieldNombreDb;
    }

    public boolean isValidChangeLogValues() {
        return validChangeLogValues;
    }

    public JTextField getTextFieldAuthor() {
        return textFieldAuthor;
    }

    public void setTextFieldAuthor(JTextField textFieldAuthor) {
        this.textFieldAuthor = textFieldAuthor;
    }

    public JTextField getTextFieldProject() {
        return textFieldProject;
    }

    public void setTextFieldProject(JTextField textFieldProject) {
        this.textFieldProject = textFieldProject;
    }

    public void setTextFieldNombreDb(JTextField textFieldNombreDb) {
        this.textFieldNombreDb = textFieldNombreDb;
    }

    public JTextField getTextFieldPath() {
        return textFieldPath;
    }

    public JRadioButton getRadioButtonChangeLogExistente() {
        return radioButtonChangeLogExistente;
    }

    public JRadioButton getRadioButtonChangeLogNuevo() {
        return radioButtonChangeLogNuevo;
    }

    public JTextField getTextFieldNombreChangeLog() {
        return textFieldNombreChangeLog;
    }

    public JLabel getLabelNombre() {
        return labelNombre;
    }

    public JLabel getLabelXML() {
        return labelXML;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        textFieldNombreDb = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        textFieldPath = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        radioButtonChangeLogNuevo = new javax.swing.JRadioButton();
        radioButtonChangeLogExistente = new javax.swing.JRadioButton();
        textFieldNombreChangeLog = new javax.swing.JTextField();
        labelNombre = new javax.swing.JLabel();
        labelXML = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldAuthor = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        textFieldProject = new javax.swing.JTextField();

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setWheelScrollingEnabled(false);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(10);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        jTextArea1.setRows(5);
        jTextArea1.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jTextArea1.text")); // NOI18N
        jTextArea1.setAutoscrolls(false);
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setFont(new java.awt.Font("Vani", 0, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jLabel1.text")); // NOI18N

        textFieldNombreDb.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.textFieldNombreDb.text")); // NOI18N
        textFieldNombreDb.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldNombreDbKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jLabel2.text")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jPanel1.border.title"), javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(0, 0, 0))); // NOI18N

        textFieldPath.setEditable(false);
        textFieldPath.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.textFieldPath.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jButton1, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jButton1.text")); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jLabel6.text")); // NOI18N

        buttonGroup1.add(radioButtonChangeLogNuevo);
        radioButtonChangeLogNuevo.setSelected(true);
        org.openide.awt.Mnemonics.setLocalizedText(radioButtonChangeLogNuevo, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.radio1.text")); // NOI18N
        radioButtonChangeLogNuevo.setName("radio1"); // NOI18N
        radioButtonChangeLogNuevo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioButtonChangeLogNuevoStateChanged(evt);
            }
        });
        radioButtonChangeLogNuevo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChangeLogNuevoItemStateChanged(evt);
            }
        });
        radioButtonChangeLogNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonChangeLogNuevoActionPerformed(evt);
            }
        });

        buttonGroup1.add(radioButtonChangeLogExistente);
        org.openide.awt.Mnemonics.setLocalizedText(radioButtonChangeLogExistente, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.radio2.text")); // NOI18N
        radioButtonChangeLogExistente.setName("radio2"); // NOI18N
        radioButtonChangeLogExistente.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                radioButtonChangeLogExistenteStateChanged(evt);
            }
        });
        radioButtonChangeLogExistente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                radioButtonChangeLogExistenteItemStateChanged(evt);
            }
        });

        textFieldNombreChangeLog.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldNombreChangeLog.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.textFieldNombreChangeLog.text")); // NOI18N

        labelNombre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(labelNombre, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.labelNombre.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(labelXML, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.labelXML.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel6)
                            .addComponent(labelNombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(textFieldNombreChangeLog, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelXML))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(textFieldPath, javax.swing.GroupLayout.DEFAULT_SIZE, 228, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1)
                                .addContainerGap())))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(radioButtonChangeLogNuevo)
                        .addGap(18, 18, 18)
                        .addComponent(radioButtonChangeLogExistente)
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioButtonChangeLogNuevo)
                    .addComponent(radioButtonChangeLogExistente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldNombreChangeLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNombre)
                    .addComponent(labelXML)))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jLabel5.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jLabel3.text")); // NOI18N

        textFieldAuthor.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.textFieldAuthor.text")); // NOI18N
        textFieldAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldAuthorKeyReleased(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.jLabel4.text")); // NOI18N

        textFieldProject.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel1.class, "WizardCreateVisualPanel1.textFieldProject.text")); // NOI18N
        textFieldProject.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldProjectKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textFieldNombreDb, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(textFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textFieldProject, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(10, 10, 10))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textFieldProject, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(textFieldNombreDb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(textFieldAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void textFieldNombreDbKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldNombreDbKeyReleased

    }//GEN-LAST:event_textFieldNombreDbKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        FileChooser fc;
        String path;
        boolean res=false;
        if(this.radioButtonChangeLogNuevo.isSelected()){
            fc=new FileChooser();
            do{
                fc.chooserAction();
                path=fc.getSelectedFile();
                if(null != path){
                    res=Utils.writeFileTest(path);
                    if(!res){
                        Message.showWarningMessage("No tiene permiso de escritura en este directorio. Favor seleccione otro");
                    }
                }
            }while(!(res || null == path));
            this.textFieldPath.setText(path);
        }else{
            final FileNameExtensionFilter filtro= new FileNameExtensionFilter("xml files (*.xml)", "xml");
            fc=new FileChooser(filtro);
            do{
                fc.chooserAction(filtro);
                path=fc.getSelectedFile();
                if(null != path){
                    res=Utils.writeFileTest(Util.getDirectoryPath(path));
                    if(!res){
                        Message.showWarningMessage("No tiene permiso de escritura en este directorio. Favor seleccione otro");
                    }
                }
            }while(!(res || null == path));
            if(null!=path){
                this.textFieldPath.setText(path);
                try {
                    JXChangeLog jxChLog=JAXBGenerator.generateObjectFromXml(this.getTextFieldPath().getText());
                    this.textFieldProject.setText(jxChLog.getHeader().getProject());
                    this.textFieldProject.setEditable(false);
                    try {
                        this.configValues=new ConfigValues(Util.getDirectoryPath(path)+Constants.DEFAULT_CONFIG_FILE_NAME);   
                    } catch (Exception ex2) {
                        MyLogger.LogWarningMessage(ex2.getMessage(),this.getClass().getName());
                        //Message.showErrorMessage(ex2.getMessage());
                        configValues=null;
                    }

                    if(null!=configValues){
                        this.textFieldNombreDb.setText(configValues.getDbName());
                        this.textFieldNombreDb.setEditable(false);
                    }else{
                        this.textFieldNombreDb.setText("");
                        this.textFieldNombreDb.setEditable(true);
                    }
                }catch (Exception ex) {
                    MyLogger.LogWarningMessage(ex.getMessage(),this.getClass().getName());
                    Message.showErrorMessage(ex.getMessage());
                    this.activateTextFields();
                }
            }else{
                this.activateTextFields();
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed
    private void activateTextFields(){
        this.textFieldProject.setText("");
        this.textFieldNombreDb.setText("");
        this.textFieldProject.setEditable(true);
        this.textFieldNombreDb.setEditable(true);
    }
    private void textFieldAuthorKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldAuthorKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldAuthorKeyReleased

    private void textFieldProjectKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldProjectKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldProjectKeyReleased

    private void radioButtonChangeLogNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonChangeLogNuevoActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_radioButtonChangeLogNuevoActionPerformed

    private void radioButtonChangeLogNuevoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioButtonChangeLogNuevoStateChanged
        
    }//GEN-LAST:event_radioButtonChangeLogNuevoStateChanged

    private void radioButtonChangeLogExistenteStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_radioButtonChangeLogExistenteStateChanged
        
    }//GEN-LAST:event_radioButtonChangeLogExistenteStateChanged

    private void radioButtonChangeLogNuevoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioButtonChangeLogNuevoItemStateChanged
        if(this.radioButtonChangeLogNuevo.isSelected()){
           this.textFieldPath.setText(oldRadio1Path);
           this.oldDbName2=this.textFieldNombreDb.getText();
           this.oldProjectName2=this.textFieldProject.getText();
           this.textFieldProject.setEditable(true);
           this.textFieldNombreDb.setEditable(true);
           this.textFieldNombreDb.setText(oldDbName1);
           this.textFieldProject.setText(oldProjectName1);
        }
    }//GEN-LAST:event_radioButtonChangeLogNuevoItemStateChanged

    private void radioButtonChangeLogExistenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_radioButtonChangeLogExistenteItemStateChanged
       if(this.radioButtonChangeLogExistente.isSelected()){
           this.textFieldPath.setText(oldRadio2Path);
           this.oldDbName1=this.textFieldNombreDb.getText();
           this.oldProjectName1=this.textFieldProject.getText();
            if(!oldRadio2Path.isEmpty()){
                this.textFieldProject.setText(oldProjectName2);
                if(!oldProjectName2.isEmpty()){
                    this.textFieldProject.setEditable(false);
                }else{
                    this.textFieldProject.setEditable(true);
                }
                this.textFieldNombreDb.setText(oldDbName2);
                if(!oldDbName2.isEmpty()){
                    this.textFieldNombreDb.setEditable(false);
                }else{
                    this.textFieldNombreDb.setEditable(true);
                }
            }else{
                this.textFieldProject.setEditable(true);
                this.textFieldNombreDb.setEditable(true);
            }
        }
    }//GEN-LAST:event_radioButtonChangeLogExistenteItemStateChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labelNombre;
    private javax.swing.JLabel labelXML;
    private javax.swing.JRadioButton radioButtonChangeLogExistente;
    private javax.swing.JRadioButton radioButtonChangeLogNuevo;
    private javax.swing.JTextField textFieldAuthor;
    private javax.swing.JTextField textFieldNombreChangeLog;
    private javax.swing.JTextField textFieldNombreDb;
    private javax.swing.JTextField textFieldPath;
    private javax.swing.JTextField textFieldProject;
    // End of variables declaration//GEN-END:variables
    
    private void executeDocumentListenerAction(DocumentEvent e){
        this.verifyChangeLogValues();
        if (this.textFieldProject.getDocument() == e.getDocument()) {
            firePropertyChange("PROJECT_NAME", null, this.textFieldProject.getText());
        }
        if (this.textFieldAuthor.getDocument() == e.getDocument()) {
            firePropertyChange("AUTHOR_NAME", null, this.textFieldAuthor.getText());
        }
        if (this.textFieldNombreDb.getDocument() == e.getDocument()) {
            firePropertyChange("DATABASE_NAME", null, this.textFieldNombreDb.getText());
        }
        if (this.textFieldPath.getDocument() == e.getDocument()) {//para recordar el valor anterior antes de cambiar de radiobutton
            if(this.getRadioButtonChangeLogNuevo().isSelected()){
                this.oldRadio1Path=this.textFieldPath.getText();
            }else{
                this.oldRadio2Path=this.textFieldPath.getText();
            }
            firePropertyChange("DIRECTORIO_DESTINO", null, this.textFieldPath.getText());
        }
        if (this.textFieldNombreChangeLog.getDocument() == e.getDocument()) {
            firePropertyChange("NOMBRE_CHANGE_LOG", null, this.textFieldNombreChangeLog.getText());
        }
    }
    @Override
    public void changedUpdate(DocumentEvent e) {
        executeDocumentListenerAction(e);
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        executeDocumentListenerAction(e);
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        executeDocumentListenerAction(e);
    }
    
    /*@Override
    public void propertyChange(PropertyChangeEvent evt) {
        //if(evt.get){
        if(this.radioButtonChangeLogNuevo.isSelected()){
            this.getTextFieldNombreChangeLog().setVisible(true);
            this.getLabelNombre().setVisible(true);
        }else{//si se selecciona el radiobutton de changelog existente
            this.getTextFieldNombreChangeLog().setVisible(false);
            this.getLabelNombre().setVisible(false);
        }
        //System.out.println("ppppppppp."+evt.getPropertyName()+"sss."+evt.getSource()+"ggg."+evt.getPropagationId());
        verifyChangeLogValues();
       // firePropertyChange("RADIOBUTTONS", false, true);
        //}
        
    }*/
    private void verifyChangeLogValues(){//actualiza validChangeLogValues
        if(this.radioButtonChangeLogNuevo.isSelected()){
            if(!(this.getTextFieldNombreChangeLog().getText().isEmpty() || this.getTextFieldPath().getText().isEmpty())){
                this.validChangeLogValues=true;
            }else{
                this.validChangeLogValues=false;
            }
        }else{//si se selecciona el radiobutton de changelog existente
            if(!this.getTextFieldPath().getText().isEmpty()){
                this.validChangeLogValues=true;
            }else{
                this.validChangeLogValues=false;
            }
        }
    }
    String oldRadio1Path="";
    String oldDbName1="";
    String oldProjectName1="";
    String oldRadio2Path="";
    String oldDbName2="";
    String oldProjectName2="";
    @Override
    public void actionPerformed(ActionEvent e) {
        if(this.radioButtonChangeLogNuevo.isSelected()){
            this.textFieldPath.setText(oldRadio1Path);
            this.getTextFieldNombreChangeLog().setVisible(true);
            this.getLabelNombre().setVisible(true);
            this.getLabelXML().setVisible(true);
        }else{//si se selecciona el radiobutton de changelog existente
            this.textFieldPath.setText(oldRadio2Path);
            this.getTextFieldNombreChangeLog().setVisible(false);
            this.getLabelNombre().setVisible(false);
            this.getLabelXML().setVisible(false);
        }
        JRadioButton r=(JRadioButton)e.getSource();
        verifyChangeLogValues();
        firePropertyChange("RADIOBUTTONS", null, r.getName());
    }
}

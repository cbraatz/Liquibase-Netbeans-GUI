package org.tesis.wizard.create;

import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import java.net.UnknownHostException;
import java.sql.SQLException;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.JTextField;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.tesis.db.MyConnection;
import org.tesis.db.dbms.Dbms;
import org.tesis.dbapi.Message;
public final class WizardCreateVisualPanel2 extends JPanel implements DocumentListener{

    public WizardCreateVisualPanel2() {
        initComponents();
        this.textFieldHost.getDocument().addDocumentListener(this);
        this.textFieldUsuario.getDocument().addDocumentListener(this);
        this.passwordFieldContrasena.getDocument().addDocumentListener(this);
        this.comboBoxDBMS.setModel(new javax.swing.DefaultComboBoxModel(Dbms.values()));
        this.updateLabelDriverText();
    }
    private String dbName;
    private MyConnection connection=null;
    
    public String getDbName() {
        return dbName;
    }

    public void setDbName(String dbName) {
        this.dbName = dbName;
    }
    public void setPort(String port) {
        this.textFieldPuerto.setText(port);
    }
    public void setUser(String user) {
        this.textFieldUsuario.setText(user);
    }
    public void setPass(String pass) {
        this.passwordFieldContrasena.setText(pass);
    }
    public void setHost(String host) {
        this.textFieldHost.setText(host);
    }
    public void selectDBMSFromComboBox(String dbms){
        ComboBoxModel model=this.comboBoxDBMS.getModel();
        for(int i=0;i<model.getSize();i++){
            Object obj=model.getElementAt(i);
            if(obj.toString().equals(dbms)){
                model.setSelectedItem(obj);
            }
        }
    }
    public MyConnection getConnection() {
        return connection;
    }

    @Override
    public String getName() {
        return "Paso #2";
    }

    public JPasswordField getPasswordFieldContrasena() {
        return passwordFieldContrasena;
    }

    public JTextField getTextFieldUrl() {
        return textFieldHost;
    }

    public JTextField getTextFieldUsuario() {
        return textFieldUsuario;
    }

    public JTextField getTextFieldHost() {
        return textFieldHost;
    }

    public JTextField getTextFieldPuerto() {
        return textFieldPuerto;
    }

    public JComboBox getComboBoxDBMS() {
        return comboBoxDBMS;
    }

    public JLabel getLabelUrl() {
        return this.labelUrl;
    }
    public void setLabelUrlText(String text){
        this.labelUrl.setText(text);
    }

    public JLabel getLabelDriver() {
        return labelDriver;
    }

    public void updateLabelDriverText() {
        Dbms d=(Dbms)this.comboBoxDBMS.getSelectedItem();
        this.labelDriver.setText(d.getDriver());
        this.labelUrl.setText(d.getUrl()+this.textFieldHost.getText()+":"+this.textFieldPuerto.getText()+"/"+this.getDbName());
       
           
       
    }
    public Dbms getSelectedDbms() {
        return(Dbms)this.comboBoxDBMS.getSelectedItem();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        textFieldHost = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textFieldUsuario = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        passwordFieldContrasena = new javax.swing.JPasswordField();
        buttonProbar = new javax.swing.JButton();
        labelUrl = new javax.swing.JLabel();
        comboBoxDBMS = new javax.swing.JComboBox();
        labelDriver = new javax.swing.JLabel();
        textFieldPuerto = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true), org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jPanel1.border.title"))); // NOI18N

        textFieldHost.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldHost.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldHost.text")); // NOI18N
        textFieldHost.setToolTipText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldHost.toolTipText")); // NOI18N
        textFieldHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textFieldHostActionPerformed(evt);
            }
        });
        textFieldHost.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldHostKeyReleased(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jLabel2.text")); // NOI18N

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jLabel3.text")); // NOI18N

        textFieldUsuario.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldUsuario.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldUsuario.text")); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jLabel1.text")); // NOI18N

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel4, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jLabel4.text")); // NOI18N

        passwordFieldContrasena.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        passwordFieldContrasena.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.passwordFieldContrasena.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(buttonProbar, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.buttonProbar.text")); // NOI18N
        buttonProbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonProbarActionPerformed(evt);
            }
        });

        labelUrl.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(labelUrl, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.labelUrl.text")); // NOI18N

        comboBoxDBMS.setToolTipText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.comboBoxDBMS.toolTipText")); // NOI18N
        comboBoxDBMS.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboBoxDBMSItemStateChanged(evt);
            }
        });
        comboBoxDBMS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxDBMSActionPerformed(evt);
            }
        });

        labelDriver.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        org.openide.awt.Mnemonics.setLocalizedText(labelDriver, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.labelDriver.text")); // NOI18N

        textFieldPuerto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        textFieldPuerto.setText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldPuerto.text")); // NOI18N
        textFieldPuerto.setToolTipText(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldPuerto.toolTipText")); // NOI18N
        textFieldPuerto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldPuertoKeyReleased(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel6, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jLabel6.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboBoxDBMS, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelDriver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelUrl, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textFieldHost, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(textFieldUsuario)
                            .addComponent(passwordFieldContrasena)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(buttonProbar))
                            .addComponent(textFieldPuerto))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(comboBoxDBMS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelDriver, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textFieldHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textFieldPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(1, 1, 1)
                .addComponent(labelUrl, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(textFieldUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(passwordFieldContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(buttonProbar))
        );

        textFieldHost.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldHost.AccessibleContext.accessibleDescription")); // NOI18N
        comboBoxDBMS.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.comboBoxDBMS.AccessibleContext.accessibleDescription")); // NOI18N
        textFieldPuerto.getAccessibleContext().setAccessibleDescription(org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.textFieldPuerto.AccessibleContext.accessibleDescription")); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(jLabel5, org.openide.util.NbBundle.getMessage(WizardCreateVisualPanel2.class, "WizardCreateVisualPanel2.jLabel5.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(348, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonProbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonProbarActionPerformed
        try {
             connection=new MyConnection(this.getLabelDriver().getText(),this.getLabelUrl().getText(), this.getTextFieldUsuario().getText(), new String(this.getPasswordFieldContrasena().getPassword()), this.getDbName());
             Message.showInformationMessage("Prueba exitosa.");
             firePropertyChange("CONNECTION", null, connection);//tira para anunciar que se hizo el test de conexion y si se puede, activar el boton finish
        }catch (ClassNotFoundException ex) {
             Message.showErrorMessage("El Driver especificado no es correcto.");
        }catch (UnknownHostException ex) {
             Message.showErrorMessage("La URL especificada no es correcta.");
        }catch (SQLException ex) {
             String s=ex.getMessage();
             if(s.contains("Access denied for user")){
                Message.showErrorMessage("Falló la autenticación de usuario.");
             }else{
                 if(s.contains("Unknown database")){
                    Message.showErrorMessage("No se encontró la base de datos especificada.");
                 }else{
                    if(s.contains("No suitable driver found")){
                        Message.showErrorMessage("No se ha encontrado el Driver(jar) correcto para esta URL o la URL no es válida.");
                     }else{
                        Message.showErrorMessage("No se pudo establecer la conexión con "+this.getLabelUrl().getText()+".\nDescripción: "+ex.getMessage());
                     }
                 }
             }
        }catch (Exception ex) {
             Message.showErrorMessage("Prueba fallida.");
             Message.showErrorMessage(ex.toString());
        }
    }//GEN-LAST:event_buttonProbarActionPerformed

    private void textFieldHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textFieldHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textFieldHostActionPerformed

    private void textFieldHostKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldHostKeyReleased
        this.updateUrl();
    }//GEN-LAST:event_textFieldHostKeyReleased

    private void comboBoxDBMSItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboBoxDBMSItemStateChanged
        this.updateLabelDriverText();
    }//GEN-LAST:event_comboBoxDBMSItemStateChanged

    private void textFieldPuertoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldPuertoKeyReleased
         this.updateUrl();
    }//GEN-LAST:event_textFieldPuertoKeyReleased

    private void comboBoxDBMSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxDBMSActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxDBMSActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonProbar;
    private javax.swing.JComboBox comboBoxDBMS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel labelDriver;
    private javax.swing.JLabel labelUrl;
    private javax.swing.JPasswordField passwordFieldContrasena;
    private javax.swing.JTextField textFieldHost;
    private javax.swing.JTextField textFieldPuerto;
    private javax.swing.JTextField textFieldUsuario;
    // End of variables declaration//GEN-END:variables
    
    private void executeDocumentListenerAction(DocumentEvent e){
        if (this.textFieldHost.getDocument() == e.getDocument()) {
            connection=null;//para deshabilitar el boton finish al editar este campo.
            firePropertyChange("URL", null, this.textFieldHost.getText());
        }
        if (this.textFieldUsuario.getDocument() == e.getDocument()) {
            connection=null;//para deshabilitar el boton finish al editar este campo.
            firePropertyChange("USUARIO", null, this.textFieldUsuario.getText());
        }
        if (this.passwordFieldContrasena.getDocument() == e.getDocument()) {
            connection=null;//para deshabilitar el boton finish al editar este campo.
            firePropertyChange("PASSWORD", null, new String(this.passwordFieldContrasena.getPassword()));
        }
    }
    public void updateUrl(){
        String url;
        /*if(this.textFieldHost.getText().endsWith(Utils.getDbUrlSeparator())){
            url=this.textFieldHost.getText()+this.dbName;
        }else{
            url=this.textFieldHost.getText()+Utils.getDbUrlSeparator()+this.dbName;
        }*/
        Dbms d=(Dbms)this.comboBoxDBMS.getSelectedItem();
        url=d.getUrl()+this.textFieldHost.getText()+":"+this.textFieldPuerto.getText()+"/"+this.getDbName();
        this.setLabelUrlText(url);
    }
  
    @Override
    public void changedUpdate(DocumentEvent e) {
        this.executeDocumentListenerAction(e);
    }

    @Override
    public void insertUpdate(DocumentEvent e) {
        this.executeDocumentListenerAction(e);
    }

    @Override
    public void removeUpdate(DocumentEvent e) {
        this.executeDocumentListenerAction(e);
    }
}
